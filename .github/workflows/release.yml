on:
  push:
    branches:
      - "master"
    tags:
      - "v*"

env:
  CARGO_INCREMENTAL: 0

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.3

      - run: |
          sudo apt-get update -y
          sudo apt-get install -y gcc-mingw-w64-x86-64 libasound2-dev

      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          components: clippy
          override: true
          target: x86_64-unknown-linux-gnu

      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu

      - name: cache dependencies
        uses: Swatinem/rust-cache@v2.2.0

      - name: clippy check
        uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      - name: install cargo-license
        uses: actions-rs/cargo@v1.0.3
        with:
          command: install
          args: cargo-license

      - name: compile for unit test
        uses: actions-rs/cargo@v1.0.3
        with:
          command: test
          args: --no-run --locked

      - name: unit test
        uses: actions-rs/cargo@v1.0.3
        with:
          command: test

      - uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --release --target x86_64-unknown-linux-gnu

      - uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --release --target x86_64-pc-windows-gnu

      - run: |
          mkdir udp-midlan
          cargo license \
            --authors \
            --do-not-bundle \
            --avoid-dev-deps \
            --avoid-build-deps \
            --filter-platform x86_64-pc-windows-gnu \
              > udp-midlan/CREDITS
          VERSION_NAME=${GITHUB_REF##*/}
          if [[ $VERSION_NAME == "master" ]]; then
              VERSION_NAME=$(git rev-parse --short HEAD)
          elif [[ ${VERSION_NAME:0:1} == "v" ]]; then
              VERSION_NAME=${VERSION_NAME:1}
          fi
          echo "$VERSION_NAME" > udp-midlan/VERSION.txt
          cp config.yml LICENSE README.md udp-midlan/
          cp target/x86_64-pc-windows-gnu/release/udp-midlan.exe udp-midlan/
          zip -r udp-midlan-windows.zip udp-midlan
          rm udp-midlan/*.exe
          cargo license \
            --authors \
            --do-not-bundle \
            --avoid-dev-deps \
            --avoid-build-deps \
            --filter-platform x86_64-unknown-linux-gnu \
              > udp-midlan/CREDITS
          cp target/x86_64-unknown-linux-gnu/release/udp-midlan udp-midlan/
          zip -r udp-midlan-linux.zip udp-midlan

      - name: pre-release
        uses: marvinpinto/action-automatic-releases@latest
        if: "! startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            udp-midlan-windows.zip
            udp-midlan-linux.zip

      - name: tagged-release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            udp-midlan-windows.zip
            udp-midlan-linux.zip
